library(shiny)
shinyApp(
ui <- fluidPage(
textInput(inputId = "text",
label = "To see how quickly..."),
textOutput(outputId = "text")
),
server <- function(input, output, session) {
text_input <- reactive({
input$text
})
Sys.sleep(10)
#text_d <- debounce(text_input, 2000)
output$text <- renderText({
#text_d()
text_input
})
}
)
library(shiny)
shinyApp(
ui <- fluidPage(
textInput(inputId = "text",
label = "To see how quickly..."),
textOutput(outputId = "text")
),
server <- function(input, output, session) {
text_input <- reactive({
input$text
})
Sys.sleep(10)
#text_d <- debounce(text_input, 2000)
output$text <- renderText({
#text_d()
text_input
})
}
)
library(shiny)
shinyApp(
ui <- fluidPage(
textInput(inputId = "text",
label = "To see how quickly..."),
textOutput(outputId = "text")
),
server <- function(input, output, session) {
text_input <- reactive({
input$text
})
#Sys.sleep(10)
#text_d <- debounce(text_input, 2000)
output$text <- renderText({
#text_d()
text_input
})
}
)
library(shiny)
shinyApp(
ui <- fluidPage(
textInput(inputId = "text",
label = "To see how quickly..."),
textOutput(outputId = "text")
),
server <- function(input, output, session) {
text_input <- reactive({
input$text
})
#Sys.sleep(10)
#text_d <- debounce(text_input, 2000)
output$text <- renderText({
#text_d()
text_input()
})
}
)
library(shiny)
shinyApp(
ui <- fluidPage(
textInput(inputId = "text",
label = "To see how quickly..."),
textOutput(outputId = "text")
),
server <- function(input, output, session) {
text_input <- reactive({
input$text
})
Sys.sleep(10)
#text_d <- debounce(text_input, 2000)
output$text <- renderText({
#text_d()
text_input()
})
}
)
library(shiny)
shinyApp(
ui <- fluidPage(
textInput(inputId = "text",
label = "To see how quickly..."),
textOutput(outputId = "text")
),
server <- function(input, output, session) {
text_input <- reactive({
input$text
})
Sys.sleep(2)
#text_d <- debounce(text_input, 2000)
output$text <- renderText({
#text_d()
text_input()
})
}
)
library(shiny)
shinyApp(
ui <- fluidPage(
textInput(inputId = "text",
label = "To see how quickly..."),
textOutput(outputId = "text")
),
server <- function(input, output, session) {
text_input <- reactive({
input$text
})
Sys.sleep(15)
#text_d <- debounce(text_input, 2000)
output$text <- renderText({
#text_d()
text_input()
})
}
)
library(shiny)
shinyApp(
ui <- fluidPage(
textInput(inputId = "text",
label = "To see how quickly..."),
textOutput(outputId = "text")
),
server <- function(input, output, session) {
text_input <- reactive({
input$text
})
Sys.sleep(30)
#text_d <- debounce(text_input, 2000)
output$text <- renderText({
#text_d()
text_input()
})
}
)
library(shiny)
shinyApp(
ui <- fluidPage(
textInput(inputId = "text",
label = "To see how quickly..."),
textOutput(outputId = "text")
),
server <- function(input, output, session) {
text_input <- reactive({
input$text
})
Sys.sleep(3)
#text_d <- debounce(text_input, 2000)
output$text <- renderText({
#text_d()
text_input()
})
}
)
library(shiny)
shinyApp(
ui <- fluidPage(
textInput(inputId = "text",
label = "To see how quickly..."),
textOutput(outputId = "text")
),
server <- function(input, output, session) {
text_input <- reactive({
input$text
})
Sys.sleep(10)
#text_d <- debounce(text_input, 2000)
output$text <- renderText({
#text_d()
text_input()
})
}
)
library(irrCAC)
library(irrCAC)
x.raw10x4
load("~/Cloud Computing/RpackagesWork/irrCAC/data/x.dist6x5psy.RData")
View(x.dist6x5psy)
View(x.dist6x5psy)
ls(x.dist6x5psy)
load("~/Cloud Computing/RpackagesWork/irrCAC/data/x.dist10x5.RData")
load("~/Cloud Computing/RpackagesWork/irrCAC/data/x.raw10x4.RData")
load("~/Cloud Computing/RpackagesWork/irrCAC/data/x.raw12x4.RData")
View(x.dist10x5)
View(x.raw10x4)
View(x.raw12x4)
library(irrCAC)
devtools::document()
library(irrCAC)
View(x.dist10x5)
devtools::document()
library(irrCAC)
View(x.raw10x4)
devtools::document()
library(irrCAC)
library(irrCAC)
help("x.raw10x4")
data(package="irrCAC")
data(package="irrCAC")
View(x.dist10x5)
View(x.dist6x5psy)
View(x.raw12x4)
devtools::document()
library(irrCAC)
data(package="irrCAC")
help("x.raw10x4")
pa.coeff.raw(x.raw10x4)
pa.coeff.raw(x.raw10x4[,2:5])
devtools::build_vignettes()
library(irrCAC)
pa.coeff.raw(x.raw10x4[,2:5])
View(x.raw10x4)
dplyr::summarise(x.row10x4, avg = mean(rater1))
install.packages("dplyr")
dplyr::summarise(x.row10x4, avg = mean(rater1))
dplyr::summarise(x.raw10x4, avg = mean(rater1))
dplyr::summarise_each(x.raw10x4, funs(mean))
dplyr::across(x.raw10x4, funs(mean))
dplyr::across(x.raw10x4, mean()
)
dplyr::select(x.raw10x4,rater1)
dplyr::select(x.raw10x4,rater1-rater4)
dplyr::select(x.raw10x4,rater1,rater4)
dplyr::select(x.raw10x4,rater1,rater2,rater3,rater4)
a<-dplyr::select(x.raw10x4,rater1,rater2,rater3,rater4)
a
dplyr::select(x.raw10x4,rater1==3)
dplyr::select(x.raw10x4,rater1=="3")
dplyr::select(x.raw10x4,rater1 == 3)
dplyr::filter(x.raw10x4,rater1 == 3)
x.raw10x4%>%dplyr::filter(rater1 == 3)
x.raw10x4%>%filter(rater1 == 3)
x.raw10x4dplyr::%>%dplyr::filter(rater1 == 3)
x.raw10x4 dplyr::%>%dplyr::filter(rater1 == 3)
library(dplyr)
x.raw10x4%>%filter(rater1 == 3)
head(x.raw10x4)
summarise(x.raw10x4,mean(rater1))
summarise(x.raw10x4,mean(rater1,rater2))
summarise(x.raw10x4,mean(rater1),mean(rater2))
summarise(x.raw10x4,m1=mean(rater1),m2=mean(rater2))
summarise(x.raw10x4,list())
summarise(x.raw10x4,list(rater1,rater2))
summarise(x.raw10x4,across(rater1:rater4)
)
summarise(x.raw10x4,across(rater1:rater4,mean))
summarise(x.raw10x4,across(rater1:rater4,sum)
)
summarise(x.raw10x4,across(rater1:rater4,sum))
x.raw12x4
summarise(x.raw12x4,across(Rater1:Rater4,sum)))
summarise(x.raw12x4,across(Rater1:Rater4,sum))
summarise(x.raw12x4,across(Rater1:Rater4,sum,na.rm=TRUE))
summarise(x.raw12x4,across(Rater1:Rater4,count,na.rm=TRUE))
summarise(x.raw12x4,across(Rater1:Rater4,Count,na.rm=TRUE))
count(x.raw12x4,across(Rater1:Rater4,na.rm=TRUE))
count(x.raw12x4)
count(x.raw12x4[,2:4])
summarise(x.raw12x4,across(Rater1:Rater4,Count,na.rm=TRUE))
summarise(x.raw12x4,across(Rater1:Rater4,sum,na.rm=TRUE))
count(x.raw10x4,rater1)
count(x.raw10x4,rater1,rater2)
count(x.raw10x4,rater1)
count(x.raw10x4$rater1)
count(x.raw10x4,rater1)
is.na(x.raw10x4)
is.na(x.raw12x4)
1-is.na(x.raw12x4)
summarize(1-is.na(x.raw12x4),across(rater1:rater4,sum))
summarise(x.raw12x4,across(Rater1:Rater4,sum,na.rm=TRUE))
summarise(is.na(x.raw12x4),across(Rater1:Rater4,sum,na.rm=TRUE))
is.na(x.raw10x4)
summarise(is.na(x.raw12x4),across(Rater1:Rater4,sum,na.rm=TRUE))
a<-1-is.na(x.raw10x4)
a
a<-1-is.na(x.raw12x4)
a
summarise(a,across(Rater1:Rater4,sum,na.rm=TRUE))
summarise(as.data.frame(a),across(Rater1:Rater4,sum,na.rm=TRUE))
summarise(as.data.frame(a),across(Rater1:Rater4,sum))
detach("package:dplyr", unload = TRUE)
summarise(as.data.frame(a),across(Rater1:Rater4,sum))
dplyr::summarise(as.data.frame(a),across(Rater1:Rater4,sum))
pa.coeff.raw(x.raw10x4)
pa.coeff.raw(x.raw10x4[,2:5])
summarise(as.data.frame(is.na(x.raw10x4[,2:5])),across(Rater1:Rater4,sum))
dplyr::summarise(as.data.frame(is.na(x.raw10x4[,2:5])),across(Rater1:Rater4,sum))
dplyr::summarise(as.data.frame(is.na(x.raw10x4[,2:5])),across(rater1:rater4,sum))
dplyr::summarise(as.data.frame(1-is.na(x.raw10x4[,2:5])),across(rater1:rater4,sum))
dplyr::summarise(as.data.frame(1-is.na(x.raw10x4[,2:5])),across(sum))
dplyr::summarise(as.data.frame(1-is.na(x.raw10x4[,2:5])),across(1:3sum))
dplyr::summarise(as.data.frame(1-is.na(x.raw10x4[,2:5])),across(1:3,sum))
dplyr::summarise(as.data.frame(1-is.na(x.raw10x4[,2:5])),across(1:4,sum))
dplyr::summarise(as.data.frame(1-is.na(x.raw10x4[,2:5])),across(1:5,sum))
dplyr::summarise(as.data.frame(1-is.na(x.raw10x4[,2:5])),across(1:4,sum))
library(irrCAC)
pa.coeff.raw(x.raw10x4[,2:5])
pa.coeff.raw(x.raw12x4[,2:5])
gwet.coeff.raw(x.raw12x4[,2:5])
gwet.ac1.raw(x.raw12x4[,2:5])
library(irrCAC)
gwet.ac1.raw(x.raw12x4[,2:5])
fleiss.kappa.raw(x.raw12x4[,2:5])
dplyr::across(x.raw10x4,.cols = everything())
summarise(x.raw10x4,across(2:5,sum))
dplyr::summarise(x.raw10x4,across(2:5,sum))
dplyr::summarise(x.raw10x4,across(2:5,n_distinct))
library(dplyr)
dplyr::summarise(x.raw10x4,across(2:5,n_distinct))
detach("package:dplyr", unload = TRUE)
dplyr::summarise(x.raw10x4,across(2:5,n_distinct))
dplyr::summarise(x.raw10x4,across(2:5,dplyr::n_distinct))
library(irrCAC)
bp.coeff.raw(x.raw10x4)
bp.coeff.raw(x.raw10x4[,2:5])
bp.coeff.raw(x.raw10x4[,3:5])
bp.coeff.raw(x.raw12x4[,2:5])
bp.coeff.raw(x.raw10x4[,3:5])
bp.coeff.raw(x.raw10x4[,2:5])
krippen.alpha.raw(x.raw10x4[,2:5])
gwet.ac1.raw(x.raw10x4[,2:5])
fleiss.kappa.raw(x.raw10x4[,2:5])
conger.kappa.raw(x.raw10x4[,2:5])
rep(1,3)
rep(1,10,2)
rep(1,10)
a<=matrix(rep(1,10),ncol = 2)
a<=matrix(rep(1,10),ncols = 2)
a<=matrix(rep(1,10),nrow = 5)
a<=matrix(1:10,nrow = 5)
a<=matrix(t(1:10),nrow = 5)
mdat <- matrix(c(1,2,3, 11,12,13), nrow = 2)
mdat
mdat <- matrix(1:6, nrow = 2)
mdat
a<=matrix(t1:10,nrow = 5)
a<-matrix(t1:10,nrow = 5)
a<-matrix(1:10,nrow = 5)
a
a<-matrix(rep(1,10),nrow = 5)
a
fleiss.kappa.raw(a)
cac.raw4raters
gwet.ac1.raw(cac.raw4raters)
gwet.ac1.raw(a)
gwet.ac1.raw(a,weights="linear")
gwet.ac1.raw(x.raw10x4,weights="linear")
gwet.ac1.raw(a,weights="linear")
pa.coeff.raw(a,weights="linear")
fleiss.kappa.raw(a,weights="linear")
conger.kappa.raw(a,weights="linear")
gwet.ac1.raw(a,weights="linear")
library(irrCAC)
gwet.ac1.raw(a,weights="linear")
library(irrCAC)
gwet.ac1.raw(a,weights="linear")
library(irrCAC)
gwet.ac1.raw(a,weights="linear")
library(irrCAC)
gwet.ac1.raw(a,weights="linear")
library(irrCAC)
gwet.ac1.raw(a,weights="linear")
gwet.ac1.raw(a,weights="linear")
a<-rep(1,4)
a
a<-rep(1,1)
a
library(irrCAC)
gwet.ac1.raw(a,weights="linear")
gwet.ac1.raw(a,weights="linear")
gwet.ac1.raw(x.raw10x4[,2:5],weights="linear")
gwet.ac1.raw(a,weights="linear")
library(irrCAC)
gwet.ac1.raw(a,weights="linear")
a
a<-matrix(rep(1,10),nrow=5)
a
gwet.ac1.raw(a,weights="linear")
a
gwet.ac1.raw(a,weights="linear")
library(irrCAC)
gwet.ac1.raw(a,weights="linear")
library(irrCAC)
gwet.ac1.raw(a,weights="linear")
library(irrCAC)
gwet.ac1.raw(a,weights="linear")
gwet.ac1.raw(a,weights="quadratic")
gwet.ac1.raw(a,weights="ordinal")
library(irrCAC)
gwet.ac1.raw(a,weights="ordinal")
ordinal.weights(1)
max(1)
library(irrCAC)
ordinal.weights(1)
library(irrCAC)
gwet.ac1.raw(a,weights="ordinal")
gwet.ac1.raw(a,weights="quadratic")
gwet.ac1.raw(a,weights="linear")
gwet.ac1.raw(a,weights="bipolar")
library(irrCAC)
gwet.ac1.raw(a,weights="bipolar")
gwet.ac1.raw(a,weights="circular")
gwet.ac1.raw(a,weights="ordinal")
fleiss.kappa.raw(a,weights="circular")
pa.coeff.raw(a,weights="circular")
pa.coeff.raw(a,weights="circular")
fleiss.kappa.raw(a,weights="circular")
library(irrCAC)
fleiss.kappa.raw(a,weights="circular")
gwet.ac1.raw(a,weights="ordinal")
fleiss.kappa.raw(a,weights="circular")
pa.coeff.raw(a,weights="circular")
krippendorff.alpha.raw(a,weights="quadratic")
krippen.alpha.raw(a,weights="quadratic")
krippen.alpha.raw(a,weights="quadratic")
library(irrCAC)
krippen.alpha.raw(a,weights="quadratic")
library(irrCAC)
krippen.alpha.raw(a,weights="quadratic")
library(irrCAC)
krippen.alpha.raw(a,weights="quadratic")
library(irrCAC)
krippen.alpha.raw(a,weights="quadratic")
cac.raw4raters
cont3x3abstractors
gwet.ac1.table(cont3x3abstractors)
matrix(c(117,13,0,0),ncol=2)
as.data.frame(matrix(c(117,13,0,0),ncol=2))
nikita<-as.data.frame(matrix(c(117,13,0,0),ncol=2))
nikita<-as.data.frame(matrix(c(117,13,0,0),ncol=2,col.names=c("q1","q2")))
nikita<-as.data.frame(matrix(c(117,13,0,0),ncol=2),col.names=c("q1","q2"))
nikita
nikita<-as.data.frame(matrix(c(117,13,0,0),ncol=2),col.names=c('q1','q2'))
nikita
nikita<-as.data.frame(matrix(c(117,13,0,0),ncol=2),colnames(nikita)=c('q1','q2'))
nikita
nikita<-as.data.frame(matrix(c(117,13,0,0),ncol=2),colnames(nikita)<-c('q1','q2'))
nikita
nikita<-as.data.frame(matrix(c(117,13,0,0),ncol=2),rownames(nikita)<-c('q1','q2'))
nikita
nikita<-as.data.frame(matrix(c(117,13,0,0),ncol=2),colnames(nikita)<-c("q1","q2"))
nikita
nikita<-as.data.frame(matrix(c(117,13,0,0),ncol=2))
nikita
gwet.ac1.table(nikita)
scott2.table(nikita)
library(irrCAC)
scott2.table(nikita)
library(irrCAC)
scott2.table(nikita)
gwet.ac1.table(nikita)
kappa2.table(nikita)
library(irrCAC)
kappa2.table(nikita)
library(irrCAC)
kappa2.table(nikita)
library(irrCAC)
kappa2.table(nikita)
library(irrCAC)
kappa2.table(nikita)
bp2.table(nikita)
krippen2.table(nikita)
library(irrCAC)
krippen2.table(nikita)
pa2.table(nikita)
library(irrCAC)
pa2.table(nikita)
pa.coeff.raw(x.raw12x4[,2:5])
pa.coeff.raw(x.raw12x4[,2:5],weights = "ordinal")
krippen.alpha.raw(x.raw10x4[,2:5])
krippen.alpha.raw(x.raw12x4[,2:5])
library(irrCAC)
krippen.alpha.raw(x.raw12x4[,2:5])
library(irrCAC)
krippen.alpha.raw(x.raw12x4[,2:5])
library(irrCAC)
krippen.alpha.raw(x.raw12x4[,2:5])
library(irrCAC)
krippen.alpha.raw(x.raw12x4[,2:5])
library(irrCAC)
krippen.alpha.raw(x.raw12x4[,2:5])
library(irrCAC)
krippen.alpha.raw(x.raw12x4[,2:5])
library(irrCAC)
krippen.alpha.raw(x.raw12x4[,2:5])
library(irrCAC)
krippen.alpha.raw(x.raw12x4[,2:5])
conger.kappa.raw(x.raw12x4[,2:5])
fleiss.kappa.raw(x.raw12x4[,2:5])
gwet.ac1.raw(x.raw12x4[,2:5])
bp.coeff.raw(x.raw12x4[,2:5])
x.dist6x5psy
pa.coeff.dist(x.dist6x5psy)
pa.coeff.dist(x.dist6x5psy[,2:6])
fleiss.kappa.dist(x.dist6x5psy[,2:6])
